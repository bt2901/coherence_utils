in artificial intelligence the frame problem was initially formulated as the problem of expressing a dynamical domain in logic without explicitly specifying which conditions are not affected by an action john mccarthy and patrick j hayes defined this problem in their 1969 article some philosophical problems from the standpoint of artificial intelligence later the term acquired a broader meaning in philosophy where it is formulated as the problem of limiting the beliefs that have to be updated in response to actions

the name frame problem derives from a common technique used by animated cartoon makers called framing where the currently moving parts of the cartoon are superimposed on the frame which depicts the background of the scene which does not change in the logical context actions are typically specified by what they change with the implicit assumption that everything else the frame remains unchanged

the frame problem in artificial intelligence

the frame problem occurs even in very simple domains a scenario with a door which can be open or closed and a light which can be on or off is statically represented by two propositions open and on if these conditions can change they are better represented by two predicates opent and ont that depend on time such predicates are called fluents a domain in which the door is closed the light is off and the door is opened at time 1 can be directly represented in logic by the following formulae

neg open0

neg on0

true rightarrow open1

the first two formulae represent the initial situation the third formula represents the effect of executing the action of opening the door at time 1 if such an action had preconditions such as the door must not be locked it would have been represented by neg locked0 rightarrow open1 this is not needed for this exposition this is a simplified formalization in which the effects of actions are specified directly in the time points in which the actions are executed in practice one would have a predicate executeopent for specifying when an action is executed and a rule forall t  executeopent wedge true rightarrow opent1 for specifying the effects of actions this is also not needed for this exposition the article on the situation calculus gives more details

while the three formulae above are a direct expression in logic of what is known they do not suffice to correctly draw consequences while the following conditions representing the expected situation are consistent with the three formulae above they are not the only ones



 neg open0  open1



 neg on0  neg on1



indeed another set of conditions that is consistent with the three formulae above is



 neg open0  open1



 neg on0  on1



the frame problem is that specifying only which conditions are changed by the actions do not allow in logic to conclude that all other conditions are not changed this problem can be solved by adding the so called “frame axioms” which explicitly specify that all conditions not affected by actions are not changed while executing that action for example since the action executed at time 0 is that of opening the door a frame axiom would state that the status of the light does not change from time 0 to time 1

on0 equiv on1

the frame problem is that one such frame axiom is necessary for every pair of action and condition such that the action does not affect the condition in other words the problem is that of formalizing a dynamical domain without explicitly specifying the frame axioms

the solution proposed by mccarthy to solve this problem involves assuming that a minimal amount of condition changes have occurred this solution is formalized using the framework of circumscription the yale shooting problem however shows that this solution is not always correct alternative solutions were then proposed involving predicate completion fluent occlusion successor state axioms etc by the end of the 1980s the frame problem as defined by mccarthy and hayes was solved even after that however the term “frame problem” was still used in part to refer to the same problem but under different settings eg concurrent actions and in part to refer to the general problem of representing and reasoning with dynamical domains

solutions to the frame problem

in the following how the frame problem is solved in various formalisms is shown the formalisms themselves are not presented in full what is presented are simplified versions that are however sufficient to show how the frame problem is solved

the fluent occlusion solution

this solution was proposed by erik sandewall who also defined a formal language for the specification of dynamical domains therefore such a domain can be first expressed in this language and then automatically translated into logic in this article only the expression in logic is shown and only in the simplified language with no action names

the rationale of this solution is to represent not only the value of conditions over time but also whether they can be affected by the last executed action the latter is represented by another condition called occlusion a condition is said to be occluded in a given time point if an action has been just executed that makes the condition true or false as an effect occlusion can be viewed as “permission to change” if a condition is occluded it is relieved from obeying the constraint of inertia

in the simplified example of the door and the light occlusion can be formalized by two predicates occludeopent and occludeont the rationale is that a condition can change value only if the corresponding occlusion predicate is true at the next time point in turn the occlusion predidate is true only when an action affecting the condition is executed

neg open0

neg on0

true rightarrow open1 wedge occludeopen1

forall t  neg occludeopent rightarrow

opent 1 equiv opent

forall t  neg occludeont rightarrow ont 1 equiv ont

in general every action making a condition true or false also makes the corresponding occlusion predicate true in this case occludeopen1 is true making the antecedent of the fourth formula above false for t1 therefore the constraint that opent 1 equiv opent does not hold for t1 therefore open can change value which is also what is enforced by the third formula

in order for this condition to work occlusion predicates have to be true only when they are made true as an effect of an action this can be achieved either by circumscription or by predicate completion it is worth noticing that occlusion does not necessarily imply a change for example executing the action of opening the door when it was already open in the formalization above makes the predicate occludeopen true and makes open true however open has not changed value as it was true already

the predicate completion solution

this encoding is similar to the fluent occlusion solution but the additional predicates denote change not permission to change for example changeopent represents the fact that the predicate open will change from time t to t1 as a result a predicate changes if and only if the corresponding change predicate is true an action results in a change if and only if it makes true a condition that was previously false or vice versa

neg open0

neg on0

neg open0 wedge true rightarrow changeopen0

forall tchangeopent equivopent notequiv opent1

forall t  changeont equivont notequiv ont1

the third formula is a different way of saying that opening the door causes the door to be opened precisely it states that opening the door changes the state of the door if it had been previously closed the last two conditions state that a condition changes value at time t if and only if the corresponding change predicate is true at time t to complete the solution the time points in which the change predicates are true have to be as few as possible and this can be done by applying predicate completion to the rules specifying the effects of actions

the successor state axioms solution

the value of a condition after the execution of an action can be determined by

the fact that the condition is true if and only if

the action makes the condition true

the condition was previously true and the action does not make it false

a successor state axiom is a formalization in logic of these two facts for

example if opendoort and closedoort are two

conditions used to denote that the action executed at time t was

to open or close the door respectively the running example is encoded as

follows

neg open0

neg on0

opendoor0

forall t  opent1 equiv opendoor0 vee opent wedge neg closedoort

this solution is centered around the value of conditions rather than the

effects of actions in other words there is an axiom for every condition

rather than a formula for every action preconditions to actions which are not

present in this example are formalized by other formulae the successor state

axioms are used in the variant to the situation calculus proposed by

ray reiter

the fluent calculus solution

the fluent calculus is a variant of the situation calculus it solves the frame problem by using first order logic

terms rather than predicates to represent the states converting

predicates into terms in first order logic is called reification the

fluent calculus can be seen as a logic in which predicates representing the

state of conditions are reified

the difference between a predicate and a term in first order logic is that a term is a representation of an object possibly a complex object composed of other objects while a predicate represent a condition that can be true or false when evaluated over a given set of terms

in the fluent calculus each possible state is represented by a term obtained by composition of other terms each one representing the conditions that are true in state for example the state in which the door is open and the light is on is represented by the term open circ on it is important to notice that a term is not true or false by itself as it is an object and not a condition in other words the term open circ on represent a possible state and does not by itself mean that this is the current state a separate condition can be stated to specify that this is actually the state at a given time eg stateopen circ on 10 means that this is the state at time 10

the solution to the frame problem given in the fluent calculus is to specify the effects of actions by stating how a term representing the state changes when the action is executed for example the action of opening the door at time 0 is represented by the formula

states circ open 1 equiv states0

the action of closing the door which makes a condition false instead of true is represented in a slightly different way

states 1 equiv states circ open 0

this formula works provided that suitable axioms are given about state and circ eg a term containing two times the same condition is not a valid state for example stateopen circ s circ open t is always false for every s and t

the event calculus solution

the event calculus uses terms for representing fluents like the fluent calculus but also has axioms constraining the value of fluents like the successor state axioms in the event calculus inertia is enforced by formulae stating that a fluent is true if it has been true at a given previous time point and no action changing it to false has been performed in the meantime predicate completion is still needed in the event calculus for obtaining that a fluent is made true only if an action making it true has been performed but also for obtaining that an action had been performed only if that is explicitly stated

the default logic solution

the frame problem can be thought of as the problem of formalizing the principle that by default everything is presumed to remain in the state in which it is leibniz an introduction to a secret encyclopædia c 1679 this default sometimes called the commonsense law of inertia was expressed by raymond reiter in default logic

fracrxs  rxdoasrxdoas

if rx is true in situation s and it can be assumed that rx remains true after executing action a then we can conclude that rx remains true

steve hanks and drew mcdermott argued on the basis of their yale shooting example that this solution to the frame problem is unsatisfactory hudson turner showed however that it works correctly in the presence of appropriate additional postulates

the answer set programming solution

the counterpart of the default logic solution in the language of answer set programming is a rule with strong negation

rxt1 leftarrow rxt hboxnot sim rxt1

if rx is true at time t and it can be assumed that rx remains true at time t1 then we can conclude that rx remains true

action description languages

action description languages elude the frame problem rather than solving it an action description language is a formal language with a syntax that is specific for describing situations and actions for example that the action opendoor makes the door open if not locked is expressed by

opendoor causes open if neg locked

the semantics of an action description language depends on what the language can express concurrent actions delayed effects etc and is usually based on transition systems

since domains are expressed in these languages rather than directly in logic the frame problem only arises when a specification given in an action description logic is to be translated into logic typically however a translation is given from these languages to answer set programming rather than first order logic

related problems

according to j van brakel some other problems that are related to or more specific versions of the frame problem include the following

extended prediction problem

holism problem

inertia problem

installation problem

planning problem

persistence problem

qualification problem

ramification problem

relevance problem

temporal projection problem

the frame problem in philosophy

in philosophy the frame problem is about rationality in general rather than

formal logic in particular the frame problem in philosophy is therefore the

problem of how a rational agent bounds the set of beliefs to change when an

action is performed

see also

common sense

defeasible reasoning

non monotonic logic

references

j mccarthy and p j hayes 1969 some philosophical problems from the standpoint of artificial intelligence machine intelligence 4463 502

e sandewall 1972 an approach to the frame problem and its implementation machine intelligence 7195–204

j mccarthy 1986 applications of circumscription to formalizing common sense knowledge artificial intelligence 2889 116

s hanks and d mcdermott 1987 nonmonotonic logic and temporal projection artificial intelligence 333379 412

r reiter 1991 the frame problem in the situation calculus a simple solution sometimes and a completeness result for goal regression in vladimir lifschitz editor artificial intelligence and mathematical theory of computation papers in honor of john mccarthy pages 359 380 academic press new york

m gelfond and v lifschitz 1993 representing action and change by logic programs journal of logic programming 17301 322

e sandewall 1994 features and fluents oxford university press

e sandewall and y shoham 1995 non monotonic temporal reasoning in d m gabbay c j hogger and j a robinson eds handbook of logic in artificial intelligence and logic programming vol 4 ch 7 p 439–498 oxford university press

ja toth 1995 book review kenneth m and patrick j hayes eds reasoning agents in a dynamic world the frame problem artificial intelligence 73323 369

p liberatore 1997 the complexity of the language a electronic transactions on artificial intelligence 11 313 37

e sandewall 1998 cognitive robotics logic and its metatheory features and fluents revisited electronic transactions on artificial intelligence 23 4307 329

m gelfond and v lifschitz 1998 action languages electronic transactions on artificial intelligence 23 4193 210

h levesque f pirri and r reiter 1998 foundations for the situation calculus electronic transactions on artificial intelligence 23 4159 178

p doherty j gustafsson l karlsson and j kvarnström 1998 tal temporal action logics language specification and tutorial electronic transactions on artificial intelligence 23 4273 306

m thielscher 1998 introduction to the fluent calculus electronic transactions on artificial intelligence 23 4179 192

r miller and m shanahan 1999 the event calculus in classical logic alternative axiomatizations electronic transactions on artificial intelligence 3177 105

r reiter 1980 a logic for default reasoning artificial intelligence 1381 132

h turner 1997 representing actions in logic programs and default theories a situation calculus approach journal of logic programming 31245 298

external links

the frame problem at the stanford encyclopaedia of philosophy

some philosophical problems from the standpoint of artificial intelligence the original article of mccarthy and hayes that proposed the problem

robotics and the common sense informatic situation presents solution to the frame problem

the history of the frame problem covers the history of the frame problem up to 2001